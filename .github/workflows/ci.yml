name: Compile and Release Firmware

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üíæ Cache Zephyr Workspace
        uses: actions/cache@v4
        with:
          path: zephyr-workspace
          key: zephyr-workspace-v2-${{ runner.os }}-${{ hashFiles('zephyr-workspace/revolute-ci-app/west.yml') }}
          restore-keys: |
            zephyr-workspace-v2-${{ runner.os }}-
      - name: üßπ Clean Landing Site
        run: rm -rf zephyr-workspace/revolute-ci-app
      - uses: actions/checkout@v4
        with:
          path: zephyr-workspace/revolute-ci-app

      - name: üß∞ Install Dependencies + West
        run: |
          sudo apt update
          sudo apt install --no-install-recommends ccache ninja-build
          python3 -m venv ~/.venv
          source ~/.venv/bin/activate
          echo "PATH=$PATH" >> $GITHUB_ENV
          pip3 install west ninja
      
      - name: ü™Å Install Zephyr SDK
        run: |
          wget -q https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.17.0/zephyr-sdk-0.17.0_linux-x86_64_minimal.tar.xz
          tar xf zephyr-sdk-0.17.0_linux-x86_64_minimal.tar.xz -C ~/
          ~/zephyr-sdk-0.17.0/setup.sh -c -t arm-zephyr-eabi
      
      - name: ‚ôªÔ∏è Initialize Zephyr Workspace
        run: |
          cd zephyr-workspace
          rm -rf .west
          west init -l revolute-ci-app
          west update --narrow -o=--depth=1
      
      - name: üî® Build Project
        run: |
          cd zephyr-workspace
          ccache -z
          west build --board revolutewireless --pristine=always --sysbuild revolute-ci-app -- -DBOARD_ROOT="$GITHUB_WORKSPACE/zephyr-workspace/revolute-ci-app"
          ccache -sv

      - name: Rename Files
        run: |
          cd zephyr-workspace
          mv build/revolute-ci-app/zephyr/revolute.signed.confirmed.hex build/revolute-ci-app/zephyr/revolutefirmware.hex
          cp build/revolute-ci-app/zephyr/revolute.signed.confirmed.bin build/revolute-ci-app/zephyr/firmware.revoluteconfig
          mv build/revolute-ci-app/zephyr/revolute.signed.confirmed.bin build/revolute-ci-app/zephyr/revolutefirmware.bin

      - name: 2. Save Firmware (Flash with debugger)üì¶
        uses: actions/upload-artifact@v4
        with:
          name: RevoluteHex
          path: zephyr-workspace/build/revolute-ci-app/zephyr/revolutefirmware.hex
          compression-level: 0

      - name: 3. Save OTA Update File (Flash with OTA)üì¶
        uses: actions/upload-artifact@v4
        with:
          name: RevoluteBin
          path: zephyr-workspace/build/revolute-ci-app/zephyr/revolutefirmware.bin
          compression-level: 0

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Download RevoluteBin artifact
        uses: actions/download-artifact@v4
        with:
          name: RevoluteBin
          path: artifacts

      - name: üöÄ Create GitHub Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            artifacts/revolutefirmware.bin
