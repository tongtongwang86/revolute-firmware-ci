on:
  pull_request:
  push:
    branches:
      - Main-Upcoming
  # run on tag creation
  create:
    tags:

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üíæ Cache Zephyr Workspace
        uses: actions/cache@v4
        with:
          path: zephyr-workspace
          key: zephyr-workspace-v2-${{ runner.os }}-${{ hashFiles('zephyr-workspace/nrfconnect-ci-app/west.yml') }}
          restore-keys: |
            zephyr-workspace-v2-${{ runner.os }}-

      - name: üßπ Clean Landing Site
        run: |
          rm -rf zephyr-workspace/nrfconnect-ci-app

      - uses: actions/checkout@v4
        with:
          # Clone the repo to a subdirectory, so we can initialize the Zephyr
          # workspace in the parent directory.
          path: zephyr-workspace/nrfconnect-ci-app

      - name: üíæ Cache ~/.venv
        uses: actions/cache@v4
        with:
          path: ~/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('zephyr-workspace/zephyr/scripts/requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: üß∞ Install Dependencies + West
        # Install the Zephyr host build dependencies, and the `west` Python tool. This list is from
        # https://docs.zephyrproject.org/3.5.0/develop/getting_started/index.html#install-dependencies
        run: |
          sudo apt update
          sudo apt install --no-install-recommends \
            ccache \
            ninja-build \

          python3 -m venv ~/.venv
          source ~/.venv/bin/activate
          # insert the PATH changes the venv activate made to be present for
          # future steps
          echo "PATH=$PATH" >> $GITHUB_ENV
          pip3 install west ninja

      - name: ü™Å Install Zephyr SDK
        # Fetch the Zephyr SDK from the GitHub Release artifact, unpack it and
        # run the setup script, selecting the '-c' option to install cmake
        # packages and the '-t arm-zephyr-eabi' option to install the toolchain
        # only for the arm-zephyr-eabi (Cortex-M) architecture, since we don't
        # need the other toolchains (xtensa, riscv, etc.)
        run: |
          wget -q https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.17.0/zephyr-sdk-0.17.0_linux-x86_64_minimal.tar.xz
          tar xf zephyr-sdk-0.17.0_linux-x86_64_minimal.tar.xz -C ~/
          ~/zephyr-sdk-0.17.0/setup.sh -c -t arm-zephyr-eabi

      - name: ‚ôªÔ∏è Initialize Zephyr Workspace
        # Set up the Zephyr workspace and install the Python dependencies
        run: |
          cd zephyr-workspace
          rm -rf .west
          west init -l nrfconnect-ci-app
          west update --narrow -o=--depth=1

      - name: üêç Install Python Dependencies
        run: |
          cd zephyr-workspace
          pip3 install -r zephyr/scripts/requirements.txt

      - name: üíæ Cache ~/.cache/ccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-v1-${{ runner.os }}-${{ hashFiles('zephyr-workspace/nrfconnect-ci-app/west.yml') }}
          restore-keys: |
            ccache-v1-${{ runner.os }}-

      - name: üìÑ Print module.yml Contents
        run: |
          cat zephyr-workspace/module.yml
              
      - name: üî® Build Project
        run: |
          cd zephyr-workspace
          ccache -z
          west build \
              --board revolutewireless \
              --pristine=always nrfconnect-ci-app \
              -- \
              -DBOARD_ROOT="/home/runner/work/revolute-firmware-ci/revolute-firmware-ci/zephyr-workspace/nrfconnect-ci-app" 
          ccache -sv
          cd build
          cd zephyr
          ls

      - name: üì¶ Save HEX
        uses: actions/upload-artifact@v4
        with:
          name: Zephyrhex
          path: zephyr-workspace/build/zephyr/zephyr.hex

      - name: üì¶ Save merged hex
        uses: actions/upload-artifact@v4
        with:
          name: MergedHex
          path: zephyr-workspace/build/zephyr/merged.hex


      - name: üì¶ Save Update File
        uses: actions/upload-artifact@v4
        with:
          name: UpdateBin
          path: zephyr-workspace/build/zephyr/app_update.bin
